ppois(1,1)
ppois(0,1)
beta<-19*14/3.8
19*14/3.8
3.8/(19*14)
2.8/(19*8)
1-exp(-.0446*8)
1-(1-.0448)^8
1-exp(-.1*8)
.1=1-exp(-beta*8)
38/40
17.1/7.3
17.1/2.34
.02*65000
65000/2.5
258*12/5*26000
258*12/5/26000
(238*12/5)/26000
(238*12/5)/25500
(238*12/5)/25500/12
25500*.01
(1-.01)^5
1-(1-.01)^5
100000=N
100000->N
N
N/2.5
40000->H
H*1/400
840/500000
-5.81E2
-5.81E-2
581/100000
100000/2.5
100000/2.5=H
100000/2.5->H
H
H*1/400
2/400
1-ln(1-.6)
1-log(1-.6)
log(1)
C<-.6
log(C-1)
log(1-C)
-log(1-C)
-log(1- 0.4898)
500000
3/16000
4/16000
1/1600+3/1600 = 4/1600
4/1600
1/1600+7/1600 = 8/1600
8/1600
30000*.29
30000*.0029
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100)#
nsims <- 60#
#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles:")#
    o4 <- paste0(quantile(paired_differences))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=5, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which((FSD_trajectory$V4 / N) >= 0.01))]#
        align_point_EQ <- EQ_trajectory$V1[min(which((EQ_trajectory$V4 / N) >= 0.01))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=500, height=500)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02))#
        lines(EQ_trajectory$V1, EQ_trajectory$V4 / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which((FSD_trajectory$V4 / N) >= 0.01))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which((EQ_trajectory$V4 / N) >= 0.01))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black')#
        lines(new_time_EQ, EQ_trajectory$V4 / N, col='red')#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_3")#
fusings <- c(100)#
nsims <- 30#
#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles:")#
    o4 <- paste0(quantile(paired_differences))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=5, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which((FSD_trajectory$V4 / N) >= 0.01))]#
        align_point_EQ <- EQ_trajectory$V1[min(which((EQ_trajectory$V4 / N) >= 0.01))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=500, height=500)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02))#
        lines(EQ_trajectory$V1, EQ_trajectory$V4 / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which((FSD_trajectory$V4 / N) >= 0.01))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which((EQ_trajectory$V4 / N) >= 0.01))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black')#
        lines(new_time_EQ, EQ_trajectory$V4 / N, col='red')#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_3")#
fusings <- c(100)#
nsims <- 30#
#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles:")#
    o4 <- paste0(quantile(paired_differences))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=5, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which((FSD_trajectory$V4 / N) >= 0.01))]#
        align_point_EQ <- EQ_trajectory$V1[min(which((EQ_trajectory$V4 / N) >= 0.01))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=500, height=500)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02))#
        lines(EQ_trajectory$V1, EQ_trajectory$V4 / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which((FSD_trajectory$V4 / N) >= 0.01))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which((EQ_trajectory$V4 / N) >= 0.01))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black')#
        lines(new_time_EQ, EQ_trajectory$V4 / N, col='red')#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_3")#
fusings <- c(100)#
nsims <- 30#
#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles:")#
    o4 <- paste0(quantile(paired_differences))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=5, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which((FSD_trajectory$V4 / N) >= 0.01))]#
        align_point_EQ <- EQ_trajectory$V1[min(which((EQ_trajectory$V4 / N) >= 0.01))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=500, height=500)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02))#
        lines(EQ_trajectory$V1, EQ_trajectory$V4 / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which((FSD_trajectory$V4 / N) >= 0.01))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which((EQ_trajectory$V4 / N) >= 0.01))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black')#
        lines(new_time_EQ, EQ_trajectory$V4 / N, col='red')#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
?lines
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100, 200, 50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles:")#
    o4 <- paste0(quantile(paired_differences))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=800, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', pch='.', lwd=.3)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.', lwd=.3)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100, 200, 50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles:")#
    o4 <- paste0(quantile(paired_differences))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=800, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100, 200, 50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles:")#
    o4 <- paste0(quantile(paired_differences))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100, 200, 50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles:")#
    o4 <- paste0(quantile(paired_differences))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
quantile(paired_differences)
?quantile
quantile(paired_differences, seq=(.5))
quantile(paired_differences, c(.5))
quantile(paired_differences, c(.025,.5))
quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1))
Res <- c("1_5")#
fusings <- c(100, 200, 50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100, 200, 50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
1500/100000
1500/100000
15000/100000
1500/100000
100/3
50/100000
50/100000*100
1/100
1/33.33
40000*.015
40000*.015
40000*.03
50/3
3.3*40000
.033*40000
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/Re_", Re, "_fuse_", fusing, "/")
input_folder
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
    	not_run<-c(3,4,5,6)#
    	if nsim %in% not_run return#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
not_run<- c(3,4,5,6)
not_run
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
    	not_run<- c(3,4,5,6)#
    	if nsim %in% not_run next#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
nsim %in% c(3,4,5,6)
nsim
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      if nsim %in% c(3,4,5,6) next#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, "batch", nsim, "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
input_folder
setwd(input_folder)
dir()
dir()[1]
dir()[3]
length(dir()
)
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir()) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
nsim
dir()[nsim]
dir()[22]
as.text(dir()[22])
as.string(dir()[22])
?as.numeric
paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)
paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)
input_folder
paste0(input_folder, dir()[nsim])
paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv")
read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:nsims) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, "batch", nsim, "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")
getwd()
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, , dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
}
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
}
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50, 100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50, 100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"
fusing<-100
input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")
print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }
paired_differences
o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)
outputResult
filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))
filename
capture.output(outputResult, file = filename)
# Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=10)#
    dev.off()
fusings<-100
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50, 100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
fusings<-50
output_folder
#for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)
# Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }
input_folder
nsims <- length(list.files(input_folder))
nsims
nsim
paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))
paired_difference
paired_difference_name
o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)
filename
file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))
output_folder
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"
outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50, 100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
}
nsim
dir()[nsim]
getwd()
input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)
getwd()
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50, 100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
}
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
fusings<-100
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }
}
}
paired_differences
mean(paired_differences
)
median(paired_differences)
quintile(paired_differences)
quantile(paired_differences)
sum(paired_difference[1:60]>
0
)
sum(paired_difference[1:60]>0)
paired_difference[1:60]
as.numericpaired_difference[1:60]
as.numeric(paired_difference[1:60]
as.numeric(paired_difference)[1:60]
paired_difference
paired_differences
paired_differences>0
8/63
52/60
200/3
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(200)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
input_folder
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(200)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(200)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_2")#
fusings <- c(100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
output_folder
input_folder
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_2")#
fusings <- c(100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_2")#
fusings <- c(50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), lwd=.1, xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, lwd=.1, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
        lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
        lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_2")#
fusings <- c(50)
input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)
getwd()
dir()
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_2")#
fusings <- c(50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
}
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), lwd=.1, xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, lwd=.1, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
      lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/nonpref"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_2")#
fusings <- c(50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/nonpref"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), lwd=.1, xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, lwd=.1, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
      lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
input_folder
# Creation of Table 6 trajectories and quantiles -------------------------------#
#
# Part 1: Get quantile information and histogram of paired differences ---------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/"#
#
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/nonpref"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/nonpref"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), lwd=.1, xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, lwd=.1, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
      lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/nonpref"
Res <- c("1_5")#
fusings <- c(100)
#for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)
fusings<-100
#for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)
fusing<-100
#for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"
input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)
fusings <- c("100")
fusing <- c("100")
input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)
setwd("/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_1_5_fuse_100")
setwd("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_1_5_fuse_100")
dir()
input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)
fusing
Res <- c("1_5")#
fusings <- c(100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
}
paired_differences
input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }
paired_differences
paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")
nsim
paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))
paired_difference_name <- paste0(input_folder, dir()[nsim], "/paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")
paired_difference_name
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      #paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
       paired_difference_name <- paste0(input_folder, dir()[nsim], "/paired_differences.csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
}
paired_differences
paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))
paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt")
\ input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      #paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
       paired_difference_name <- paste0(input_folder, dir()[nsim], "/paired_differences.csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)
outputResult
filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))
filename
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/nonpref"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(100)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      #paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
       paired_difference_name <- paste0(input_folder, dir()[nsim], "/paired_differences.csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/nonpref"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), lwd=.1, xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, lwd=.1, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
      lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
ls()
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/nonpref"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      #paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
       paired_difference_name <- paste0(input_folder, dir()[nsim], "/paired_differences.csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/nonpref"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), lwd=.1, xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, lwd=.1, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
      lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
output_folder <- "~/Philly_Covid/EoN_res/output_paired_differences/backlog/nonpref"#
#
# Parameters of Table 6 --------------------------------------------------------#
Res <- c("1_5")#
fusings <- c(50)#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
 #   input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    #for backlog#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
	setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    paired_differences <- vector()#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot paired difference -------------------------------------------------#
      #paired_difference_name <- paste0(input_folder, dir()[nsim], "/plateau_paired_differences_", gsub("_", ".", Re), "_", fusing, ".csv")#
       paired_difference_name <- paste0(input_folder, dir()[nsim], "/paired_differences.csv")#
      paired_difference <- read.csv(paired_difference_name, stringsAsFactors = F, header=F)#
      paired_differences <- c(paired_differences, unname(unlist(paired_difference)))#
    }#
    # Write paired difference results ------------------------------------------#
    o1 <- paste0("Re_", Re, "_fusing_", fusing)#
    o2 <- paste0("nsims: ", nsims)#
    o3 <- paste0("quantiles 0,.025,.25,.5,.75,.975, 1 :")#
    o4 <- paste0(quantile(paired_differences, c(0,.025,.25,.5,.75,.975,1)))#
    outputResult<-list(o1, o2, o3, o4)#
    filename <- file.path(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".txt"))#
    capture.output(outputResult, file = filename)#
    # Plot paired difference histogram -----------------------------------------#
    pdf(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".pdf"), width=7, height=5)#
    hist(paired_differences, breaks=20)#
    dev.off()#
  }#
} #
#
# Part 2: Get plots of trajectores ---------------------------------------------#
#
# Get output folder name -------------------------------------------------------#
#output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/"#
#
#for backlog#
output_folder <- "~/Philly_Covid/EoN_res/output_trajectories/backlog/nonpref"#
N <- 100000#
sd_date <- "2020/03/23"#
easing_date <- "2020/06/05"#
second_easing_date <- "2020/08/01"#
evictions_date <- "2020/09/01"#
second_sd_date <- "2020/11/1"#
sd_to_easing <- as.numeric(as.Date(easing_date, format="%Y/%m/%d") - as.Date(sd_date, format="%Y/%m/%d"))#
easing_to_second_easing <- as.numeric(as.Date(second_easing_date, format="%Y/%m/%d") - as.Date(easing_date, format="%Y/%m/%d"))#
second_easing_to_evictions <- as.numeric(as.Date(evictions_date, format="%Y/%m/%d") - as.Date(second_easing_date, format="%Y/%m/%d"))#
evictions_to_second_sd <- as.numeric(as.Date(second_sd_date, format="%Y/%m/%d") - as.Date(evictions_date, format="%Y/%m/%d"))#
for (Re in Res) {#
  for (fusing in fusings) {#
    # Get input folder name ----------------------------------------------------#
    #input_folder <- paste0("~/Philly_Covid/EoN_res/Re_", Re, "_fuse_", fusing, "/")#
    input_folder <- paste0("~/Philly_Covid/EoN_res/backlog/nonprefexp_backlog_Re_", Re, "_fuse_", fusing, "/")#
    setwd(input_folder)#
    print(paste0("Re: ", Re))#
    print(paste0("fusing: ", fusing))#
    align_point_FSD <- NA#
    align_point_EQ <- NA#
    start_of_evictions_day <- NA#
    nsims <- length(list.files(input_folder))#
    for (nsim in 1:length(dir())) {#
      # Plot aligned trajectory ------------------------------------------------#
      FSD_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_FSD.csv"), stringsAsFactors = F, header = F)#
      EQ_trajectory <- read.csv(paste0(input_folder, dir()[nsim], "/csvs/0_EQ.csv"), stringsAsFactors = F, header = F)#
      if (nsim == 1) {#
        align_point_FSD <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        png(paste0(output_folder, "Re_", Re, "_fusing_", fusing, ".png"), width=1200, height=800)#
        plot(FSD_trajectory$V1, FSD_trajectory$V4 / N, col='black', pch='.', ylim=c(0, 0.02), lwd=.1, xlab="time (days)", ylab="% Infectious")#
        start_of_evictions_day <- align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions#
        min_dex <- min(which(EQ_trajectory$V1 >= start_of_evictions_day))#
        lines(EQ_trajectory$V1[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, lwd=.1, col='red', pch='.')#
      } else {#
        align_point_FSD_focal <- FSD_trajectory$V1[min(which(((FSD_trajectory$V4 + FSD_trajectory$V3) / N) >= 0.02))]#
        align_point_EQ_focal <- EQ_trajectory$V1[min(which(((EQ_trajectory$V4 + EQ_trajectory$V3) / N) >= 0.02))]#
        to_move_FSD <- align_point_FSD - align_point_FSD_focal#
        to_move_EQ <- align_point_EQ - align_point_EQ_focal#
        stopifnot(to_move_FSD == to_move_EQ)#
        new_time_FSD <- FSD_trajectory$V1 + to_move_FSD#
        new_time_EQ <- EQ_trajectory$V1 + to_move_EQ#
        min_dex <- min(which(new_time_EQ >= start_of_evictions_day))#
      lines(new_time_EQ[min_dex:nrow(EQ_trajectory)], EQ_trajectory$V4[min_dex:nrow(EQ_trajectory)] / N, col='red', lwd=.1)#
      lines(new_time_FSD, FSD_trajectory$V4 / N, col='black', lwd=.1)#
      }#
    }#
    abline(v=align_point_FSD, col='blue')#
    abline(v=align_point_FSD + sd_to_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions, col='blue', lty="dashed")#
    abline(v=align_point_FSD + sd_to_easing + easing_to_second_easing + second_easing_to_evictions + evictions_to_second_sd, col='blue')#
    dev.off()#
  }#
}
